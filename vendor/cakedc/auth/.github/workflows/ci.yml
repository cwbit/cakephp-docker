# CI workflow adapted from https://github.com/cakephp/cakephp/blob/master/.github/workflows/ci.yml
name: CI

on:
  push:
  pull_request:

jobs:
  testsuite:
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-version: ['7.3', '7.4', '8.0']
        db-type: [sqlite, mysql, pgsql]
        prefer-lowest: ['']

    steps:
      - name: Setup MySQL latest
        if: matrix.db-type == 'mysql'
        run: docker run --rm --name=mysqld -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=cakephp -p 3306:3306 -d mysql --default-authentication-plugin=mysql_native_password --disable-log-bin

      - name: Setup PostgreSQL latest
        if: matrix.db-type == 'pgsql'
        run: docker run --rm --name=postgres -e POSTGRES_PASSWORD=postgres -e POSTGRES_DB=cakephp -p 5432:5432 -d postgres

      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, apcu, memcached, redis, pdo_${{ matrix.db-type }}
          ini-values: apc.enable_cli = 1
          coverage: pcov

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: Composer install
        run: |
          if ${{ matrix.prefer-lowest == 'prefer-lowest' }}; then
            composer update --prefer-lowest --prefer-stable
          else
            composer update
          fi

      - name: Setup problem matchers for PHPUnit
        if: matrix.php-version == '7.4' && matrix.db-type == 'mysql'
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Run PHPUnit
        run: |
          if [[ ${{ matrix.db-type }} == 'sqlite' ]]; then export DB_URL='sqlite:///:memory:'; fi
          if [[ ${{ matrix.db-type }} == 'mysql' ]]; then export DB_URL='mysql://root:root@127.0.0.1/cakephp'; fi
          if [[ ${{ matrix.db-type }} == 'pgsql' ]]; then export DB_URL='postgres://postgres:postgres@127.0.0.1/postgres'; fi
          if [[ ${{ matrix.php-version }} == '7.4' ]]; then
            export CODECOVERAGE=1 && vendor/bin/phpunit --verbose --coverage-clover=coverage.xml
          else
            vendor/bin/phpunit
          fi

      - name: Submit code coverage
        if: matrix.php-version == '7.4'
        uses: codecov/codecov-action@v1

  cs-stan:
    name: Coding Standard & Static Analysis
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: mbstring, intl, apcu, memcached, redis
          tools: cs2pr
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Get date part for cache key
        id: key-date
        run: echo "::set-output name=date::$(date +'%Y-%m')"

      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ steps.key-date.outputs.date }}-${{ hashFiles('composer.json') }}-${{ matrix.prefer-lowest }}

      - name: composer install
        run: composer stan-setup

      - name: Run PHP CodeSniffer
        run: composer cs-check
        continue-on-error: true

      - name: Run psalm
        if: success() || failure()
        run: composer psalm
        continue-on-error: true

      - name: Run phpstan
        if: success() || failure()
        run: composer stan
        continue-on-error: true
